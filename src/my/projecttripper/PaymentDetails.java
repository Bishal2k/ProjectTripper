/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.projecttripper;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author BISHAL
 */
public class PaymentDetails extends javax.swing.JFrame {

    /**
     * Creates new form PaymentDetails
     */
    PreparedStatement ps;
    String orderId = "";
        String customerName = "";
        double paidAmount = 0;
        double totalAmount = 0;
        double dueAmount = 0 ;
        double initialPaidAmount;
        double actualPaidAmount = 0;
        double negativeChecker = 0;
        String enteredBy ;
        DefaultTableModel model ; 
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = "";
        DateTimeFormatter  formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String user;
     
    public PaymentDetails() {
        initComponents();
         setResizable(false);
         this.setLocationRelativeTo(null);
         enteredBy();
         
         this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
         
        
         this.addWindowListener(new WindowAdapter()
                 {
                   @Override
                   public void windowClosing(WindowEvent e){
                       
                       int x = JOptionPane.showConfirmDialog(rootPane, "Do you want to close the system ?","EXIT", JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
                       
                       if(x == JOptionPane.YES_OPTION)
                       {
                        e.getWindow().dispose();
                
                 }
                 else
                 {
                     System.out.print("working.....");
                 }
                       
                   }  
                 });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tbpPayment = new javax.swing.JTabbedPane();
        pnlCredit = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCredit = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnMakePayment = new javax.swing.JButton();
        pnlPaymentDetails = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPayment = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtOrder = new javax.swing.JTextField();
        txtCustomer = new javax.swing.JTextField();
        txtPaidAmount = new javax.swing.JTextField();
        jdcDate = new com.toedter.calendar.JDateChooser();
        btnPayment = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        pnlProfit = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProfit = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jdcStartingDate = new com.toedter.calendar.JDateChooser();
        btnAnalyize = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1400, 550));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tbpPayment.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tbpPayment.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N

        pnlCredit.setBackground(new java.awt.Color(255, 255, 255));

        tblCredit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblCredit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Date", "Order Id", "Order By", "Total Amount", "Paid Amount", "Due Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCredit.setRowHeight(20);
        tblCredit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblCreditPropertyChange(evt);
            }
        });
        jScrollPane2.setViewportView(tblCredit);
        if (tblCredit.getColumnModel().getColumnCount() > 0) {
            tblCredit.getColumnModel().getColumn(0).setResizable(false);
            tblCredit.getColumnModel().getColumn(1).setResizable(false);
            tblCredit.getColumnModel().getColumn(2).setResizable(false);
            tblCredit.getColumnModel().getColumn(3).setResizable(false);
            tblCredit.getColumnModel().getColumn(4).setResizable(false);
            tblCredit.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel7.setText("Order Id:");

        txtOrderId.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        btnSearch.setBackground(new java.awt.Color(255, 0, 0));
        btnSearch.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnMakePayment.setBackground(new java.awt.Color(255, 0, 0));
        btnMakePayment.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        btnMakePayment.setForeground(new java.awt.Color(255, 255, 255));
        btnMakePayment.setText("Make Payment");
        btnMakePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakePaymentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(67, 67, 67)
                        .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(142, 142, 142)
                .addComponent(btnMakePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMakePayment, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlCreditLayout = new javax.swing.GroupLayout(pnlCredit);
        pnlCredit.setLayout(pnlCreditLayout);
        pnlCreditLayout.setHorizontalGroup(
            pnlCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCreditLayout.setVerticalGroup(
            pnlCreditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCreditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbpPayment.addTab("View Credit", pnlCredit);

        pnlPaymentDetails.setBackground(new java.awt.Color(255, 255, 255));

        tblPayment.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblPayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Customer Name", "Total Amount", "Paid Amount", "Due Amount", "Entered By", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPayment.setRowHeight(20);
        tblPayment.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblPaymentPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(tblPayment);
        if (tblPayment.getColumnModel().getColumnCount() > 0) {
            tblPayment.getColumnModel().getColumn(0).setResizable(false);
            tblPayment.getColumnModel().getColumn(1).setResizable(false);
            tblPayment.getColumnModel().getColumn(2).setResizable(false);
            tblPayment.getColumnModel().getColumn(3).setResizable(false);
            tblPayment.getColumnModel().getColumn(4).setResizable(false);
            tblPayment.getColumnModel().getColumn(5).setResizable(false);
            tblPayment.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel3.setText("Order Id:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel4.setText("Customer Name:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel5.setText("Paid Amount:");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel6.setText("Date:");

        btnPayment.setBackground(new java.awt.Color(255, 0, 0));
        btnPayment.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        btnPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnPayment.setText("Make Payment");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });

        btnView.setBackground(new java.awt.Color(255, 0, 0));
        btnView.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        btnView.setForeground(new java.awt.Color(255, 255, 255));
        btnView.setText("View Payment");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(402, 402, 402)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(jdcDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(104, 104, 104)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPaidAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(txtCustomer)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(186, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(txtPaidAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnPayment, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(btnView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        javax.swing.GroupLayout pnlPaymentDetailsLayout = new javax.swing.GroupLayout(pnlPaymentDetails);
        pnlPaymentDetails.setLayout(pnlPaymentDetailsLayout);
        pnlPaymentDetailsLayout.setHorizontalGroup(
            pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaymentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        pnlPaymentDetailsLayout.setVerticalGroup(
            pnlPaymentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPaymentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbpPayment.addTab("Record Payment", pnlPaymentDetails);

        pnlProfit.setBackground(new java.awt.Color(255, 255, 255));

        tblProfit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblProfit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Starting Date", "Today Date", "period(Months)", "Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProfit.setRowHeight(20);
        tblProfit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tblProfitPropertyChange(evt);
            }
        });
        jScrollPane3.setViewportView(tblProfit);
        if (tblProfit.getColumnModel().getColumnCount() > 0) {
            tblProfit.getColumnModel().getColumn(0).setResizable(false);
            tblProfit.getColumnModel().getColumn(1).setResizable(false);
            tblProfit.getColumnModel().getColumn(2).setResizable(false);
            tblProfit.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel2.setText("Starting Date:");

        jdcStartingDate.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N

        btnAnalyize.setBackground(new java.awt.Color(255, 0, 0));
        btnAnalyize.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        btnAnalyize.setForeground(new java.awt.Color(255, 255, 255));
        btnAnalyize.setText("Analyize");
        btnAnalyize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(405, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAnalyize, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(42, 42, 42)
                        .addComponent(jdcStartingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(570, 570, 570))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdcStartingDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(27, 27, 27)
                .addComponent(btnAnalyize, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlProfitLayout = new javax.swing.GroupLayout(pnlProfit);
        pnlProfit.setLayout(pnlProfitLayout);
        pnlProfitLayout.setHorizontalGroup(
            pnlProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlProfitLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addGroup(pnlProfitLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(548, 548, 548))
        );
        pnlProfitLayout.setVerticalGroup(
            pnlProfitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlProfitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tbpPayment.addTab("Calculate Profit", pnlProfit);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(tbpPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 1357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(349, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(tbpPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 38, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1720, 490));

        jMenuBar1.setForeground(new java.awt.Color(255, 255, 255));
        jMenuBar1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jMenuBar1PropertyChange(evt);
            }
        });

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/presentation.png"))); // NOI18N
        jMenu1.setText("Menu");
        jMenu1.setFont(new java.awt.Font("MS Gothic", 1, 24)); // NOI18N
        jMenu1.setMargin(new java.awt.Insets(10, 0, 10, 0));

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        jMenuItem1.setText("New Entry");
        jMenuItem1.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jMenuItem2.setText("View Order");
        jMenuItem2.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/appointment.png"))); // NOI18N
        jMenuItem3.setText("View Order Details");
        jMenuItem3.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pos-terminal.png"))); // NOI18N
        jMenuItem4.setText("Record Payment");
        jMenuItem4.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vision.png"))); // NOI18N
        jMenuItem5.setText("View Credit");
        jMenuItem5.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil.png"))); // NOI18N
        jMenuItem6.setText("Analysis Profit");
        jMenuItem6.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/review.png"))); // NOI18N
        jMenuItem8.setText("Change Password");
        jMenuItem8.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close_2.png"))); // NOI18N
        jMenuItem7.setText("Logout");
        jMenuItem7.setMargin(new java.awt.Insets(0, 0, 10, 0));
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1704, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
         try
       {
         
         orderId = txtOrder.getText().trim();
         customerName = txtCustomer.getText().trim();
         paidAmount = Integer.parseInt(txtPaidAmount.getText().trim());
        totalAmount = 0 ;
         dueAmount = 0 ;
         initialPaidAmount=0;
         actualPaidAmount = 0;
        double negativeChecker = 0;
        
        DefaultTableModel model = (DefaultTableModel)tblPayment.getModel(); 
        model.setRowCount(0);
        SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dFormat.format(jdcDate.getDate());
        DateTimeFormatter  formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate jDate1 = LocalDate.parse(date,formatter);
        java.sql.Date date2 = java.sql.Date.valueOf(jDate1);
        String query = "Select dueAmount,totalAmount,paidAmount from Credit where orderId=? ";
        if (txtOrder.getText().equals("") || txtCustomer.getText().equals("") || txtPaidAmount.getText().equals("") || date.equals("") )
        {
             JOptionPane.showMessageDialog(null, "Please fill all the form correctly");
        }
        else
        {
             try {
            ps= MyConnection.getConnection().prepareStatement(query);
            ps.setString(1,orderId);
            ResultSet rs = ps.executeQuery();
            if (rs.next())
            {
                totalAmount = rs.getDouble("totalAmount");
                double initialDueAmount = rs.getInt("dueAmount");
                initialPaidAmount =rs.getDouble("paidAmount");
                
                if (initialPaidAmount ==0)
                {
                    if (initialDueAmount == 0)
                    {
                        
                        dueAmount = 0;
                         ps.close();
                         JOptionPane.showMessageDialog(null, "All dues are cleared");
                         
                    }
                    else
                    {
                        if (initialDueAmount>=paidAmount)
                        {
                            actualPaidAmount = paidAmount;
                            dueAmount = totalAmount - actualPaidAmount;
                             ps.close();
                              enterPayment();
                        }
                        else
                        {
                             JOptionPane.showMessageDialog(null, "Paid Amount is greater than due Amount");
                             ps.close();
                        }
                    }
                }
                else
                {
                     if (initialDueAmount == 0)
                    {
                         dueAmount = 0;
                         ps.close();
                         JOptionPane.showMessageDialog(null, "All dues are cleared");
                             
                    }
                    else
                    {
                       
                         if (initialDueAmount>=paidAmount)
                        {
                            actualPaidAmount = initialPaidAmount+paidAmount;
                            dueAmount = initialDueAmount - paidAmount;
                             ps.close();
                             enterPayment();
                        }
                        else
                        {
                             JOptionPane.showMessageDialog(null, "Paid Amount is greater than due Amount");
                             ps.close();
                        }
                       
                    }
                }
                ps.close();
            
                
        } 
        }
         catch (SQLException ex) {
            Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex);
        }
        }
        
       
       }
       catch(NullPointerException ex)
       {
            JOptionPane.showMessageDialog(null, "Please Select Date");
       }
        catch( NumberFormatException ex)
       {
            JOptionPane.showMessageDialog(null, "Please fill all the form properly");
       }
        
        
                         
    }//GEN-LAST:event_btnPaymentActionPerformed
        public void enterPayment()
            
    {
         orderId = txtOrder.getText().trim();
         String date = dFormat.format(jdcDate.getDate());
        LocalDate jDate1 = LocalDate.parse(date,formatter);
        java.sql.Date date2 = java.sql.Date.valueOf(jDate1);
           String query2 = "insert into PaymentDetails(date, orderId, customerName,totalAmount,paidAmount,due,enteredBy) values(?,?,?,?,?,?,?)";
               model = (DefaultTableModel)tblPayment.getModel(); 
               
                try
                {
                     int p = JOptionPane.showConfirmDialog(null,"Please Check the Details once"+"\n"+"Order Id:"+" "+orderId+"\n"+"Customer Name:"+" "+customerName+"\n"+"Paid Amount:"+" "+" "+paidAmount,"Transaction Check",JOptionPane.YES_NO_OPTION);
                    if(p==0)
                    {
                        ps = MyConnection.getConnection().prepareStatement(query2);
                        ps.setDate(1, date2);
                        ps.setString(2,orderId);
                        ps.setString(3, customerName);
                        ps.setDouble(4, totalAmount);
                        ps.setDouble(5,actualPaidAmount);
                        ps.setDouble(6,dueAmount);
                        ps.setString(7,enteredBy);
                        ps.executeUpdate();
                        ps.close();
                     try
                     {
                         String query3 = "update Credit set dueAmount = ?, paidAmount=? where orderId=?";
                         ps = MyConnection.getConnection().prepareStatement(query3);
                         ps.setDouble(1, dueAmount);
                         ps.setDouble(2, actualPaidAmount);
                         ps.setString(3, orderId);
                         ps.executeUpdate();
                         ps.close();
                        model.addRow(new Object []{orderId,customerName,totalAmount,actualPaidAmount,dueAmount,enteredBy,date2});
                         JOptionPane.showMessageDialog(null, "Sucessfully updated");
                     }
                     catch (Exception ex)
                    {
                    System.out.println(ex);
                      Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
                     }
                }
                }
                catch (Exception ex)
                {
                    System.out.println(ex);
                      Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
                }
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tblCredit.getModel(); 
        String orderId = txtOrderId.getText().trim();
        String query = "select * from credit where orderId = ?";
        try {
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, orderId);
            ResultSet rs = ps.executeQuery();
            if(rs.next())
            {
                model.addRow(new Object[]{rs.getDate("orderDate"),rs.getString("orderId"),rs.getString("orderBy"),rs.getInt("totalAmount"),rs.getInt("paidAmount"),rs.getInt("dueAmount")});
                ps.close();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Sorry No data found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnMakePaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakePaymentActionPerformed
        // TODO add your handling code here:
        
        tbpPayment.setSelectedIndex(1);
         String setOrderId = txtOrderId.getText().trim();
        txtOrder.setText(setOrderId);
    }//GEN-LAST:event_btnMakePaymentActionPerformed

    private void btnAnalyizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyizeActionPerformed
        // TODO add your handling code here:
         SimpleDateFormat dFormat = new SimpleDateFormat("yyyy-MM-dd");
        String date = dFormat.format(jdcStartingDate.getDate());
        DateTimeFormatter  formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate jDate1 = LocalDate.parse(date,formatter);
        java.sql.Date date2 = java.sql.Date.valueOf(jDate1);
       // java.util.Date tDate=dFormat.(new java.util.Date());  
       DefaultTableModel model = (DefaultTableModel)tblProfit.getModel();
       model.setRowCount(0);
       System.out.println(date2);
        long millis=System.currentTimeMillis();  
        java.sql.Date tDate=new java.sql.Date(millis);  
        System.out.println(tDate);  
        LocalDate ltDate = tDate.toLocalDate();
        long daysBetween = ChronoUnit.DAYS.between(jDate1,ltDate);
        System.out.println(daysBetween);
        double months = daysBetween/30;
        String query = "SELECT SUM(price)as totalIncome FROM  Entry where orderDate < ?";
        double totalIncome = 0.0 ;
        double totalExpenses;
        double profit;
        try {
            ps = MyConnection.getConnection().prepareStatement(query);
            ps.setString(1,date);
            ResultSet rs = ps.executeQuery();
            if (rs.next())
            {
                totalIncome = Double.parseDouble(rs.getString("totalIncome"));
                System.out.println("total Income is : "+totalIncome);
                ps.close();
            }
            else
            {
                ps.close();
            }
            query = "SELECT SUM(totalExpenses)as totalExpenses FROM  Entry where orderDate < ?";
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, date);
             ResultSet rs2 = ps.executeQuery();
             if(rs2.next())
             {
                 totalExpenses = Double.parseDouble(rs2.getString("totalExpenses"));
                System.out.println("total Expenses is : "+totalExpenses);
                ps.close(); 
                profit = totalIncome-totalExpenses;
                System.out.println("profit is "+profit);
                model.addRow(new Object[]{date2,ltDate,months,profit });
                
             }
             else
             {
                 ps.close();
             }
             
             
            } catch (SQLException ex) {
            Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAnalyizeActionPerformed
    public void enteredBy()
    {
         String query = "select userName from UserLogin where userId = 1";
         try {
             ps= MyConnection.getConnection().prepareStatement(query);
             ResultSet rs = ps.executeQuery();
             if (rs.next())
             {
                 enteredBy = rs.getString("userName");
                 user = enteredBy;
                 ps.close();
             }
             else
             {
                 ps.close();
             }
         } catch (SQLException ex) {
             Logger.getLogger(ProjectTripper.class.getName()).log(Level.SEVERE, null, ex);
         }
    }
    private void tblCreditPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblCreditPropertyChange
        JTableHeader Thea = tblCredit.getTableHeader();
        Thea.setBackground(new Color(255,0,0));
        Thea.setForeground(Color.white);
        Thea.setFont(new Font("Tahoma", Font.PLAIN, 18));
    }//GEN-LAST:event_tblCreditPropertyChange

    private void tblPaymentPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblPaymentPropertyChange
       JTableHeader Theader = tblPayment.getTableHeader();
        Theader.setBackground(new Color(255,0,0));
        Theader.setForeground(Color.white);
        Theader.setFont(new Font("Tahoma", Font.PLAIN, 18));
    }//GEN-LAST:event_tblPaymentPropertyChange

    private void tblProfitPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tblProfitPropertyChange
        JTableHeader Theader = tblProfit.getTableHeader();
        Theader.setBackground(new Color(255,0,0));
        Theader.setForeground(Color.white);
        Theader.setFont(new Font("Tahoma", Font.PLAIN, 18));
    }//GEN-LAST:event_tblProfitPropertyChange

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        ProjectTripper obj = new ProjectTripper();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        OderDetails obj = new OderDetails();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        View obj = new View();
        obj.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        PaymentDetails obj = new PaymentDetails();
        obj.setVisible(true);
        obj.tbpPayment.setSelectedIndex(1);
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        PaymentDetails obj = new PaymentDetails();
        obj.setVisible(true);
        obj.tbpPayment.setSelectedIndex(0);
        this.dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        PaymentDetails obj = new PaymentDetails();
        obj.setVisible(true);
        obj.tbpPayment.setSelectedIndex(2);
        this.dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        changepass obj = new changepass();
        obj.setVisible(true);
        obj.user2 = user;
        //sobj.setUsername.setText(user);

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

        int p = JOptionPane.showConfirmDialog(null,"Do you want to Logout?","Logout",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(p==0)
        {
            login obj = new login();
            obj.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuBar1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jMenuBar1PropertyChange

    }//GEN-LAST:event_jMenuBar1PropertyChange

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel)tblPayment.getModel();
            model.setRowCount(0);
            String checker = "on";
            orderId = txtOrder.getText().trim();
            String query = "select * from PaymentDetails where orderId=?";
            ps=MyConnection.getConnection().prepareStatement(query);
            ps.setString(1, orderId);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next())
            {
                checker = "off";
                model.addRow(new Object[]{rs.getString("orderId"),rs.getString("customerName"),rs.getDouble("totalAmount"),rs.getDouble("paidAmount"),rs.getDouble("due"),rs.getString("enteredBy"),rs.getDate("date")});
               
                
            }
            ps.close();
            if (checker.equals("on"))
            {
                 JOptionPane.showMessageDialog(null, "Sorry No data found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(PaymentDetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalyize;
    private javax.swing.JButton btnMakePayment;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JDateChooser jdcDate;
    private com.toedter.calendar.JDateChooser jdcStartingDate;
    private javax.swing.JPanel pnlCredit;
    private javax.swing.JPanel pnlPaymentDetails;
    private javax.swing.JPanel pnlProfit;
    private javax.swing.JTable tblCredit;
    private javax.swing.JTable tblPayment;
    private javax.swing.JTable tblProfit;
    public javax.swing.JTabbedPane tbpPayment;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtOrder;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtPaidAmount;
    // End of variables declaration//GEN-END:variables
}
